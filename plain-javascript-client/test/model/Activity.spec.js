/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 5.8.112511
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Quantimodo);
  }
}(this, function(expect, Quantimodo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Quantimodo.Activity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Activity', function() {
    it('should create an instance of Activity', function() {
      // uncomment below and update the code to test Activity
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be.a(Quantimodo.Activity);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "userId")', function() {
      // uncomment below and update the code to test the property userId
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property component (base name: "component")', function() {
      // uncomment below and update the code to test the property component
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property action (base name: "action")', function() {
      // uncomment below and update the code to test the property action
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property content (base name: "content")', function() {
      // uncomment below and update the code to test the property content
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property primaryLink (base name: "primaryLink")', function() {
      // uncomment below and update the code to test the property primaryLink
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property itemId (base name: "itemId")', function() {
      // uncomment below and update the code to test the property itemId
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property secondaryItemId (base name: "secondaryItemId")', function() {
      // uncomment below and update the code to test the property secondaryItemId
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property dateRecorded (base name: "dateRecorded")', function() {
      // uncomment below and update the code to test the property dateRecorded
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property hideSitewide (base name: "hideSitewide")', function() {
      // uncomment below and update the code to test the property hideSitewide
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property mpttLeft (base name: "mpttLeft")', function() {
      // uncomment below and update the code to test the property mpttLeft
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property mpttRight (base name: "mpttRight")', function() {
      // uncomment below and update the code to test the property mpttRight
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property isSpam (base name: "isSpam")', function() {
      // uncomment below and update the code to test the property isSpam
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

    it('should have the property metaDataArray (base name: "metaDataArray")', function() {
      // uncomment below and update the code to test the property metaDataArray
      //var instance = new Quantimodo.Activity();
      //expect(instance).to.be();
    });

  });

}));
